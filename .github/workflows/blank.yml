<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mushroom Market</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-white font-sans">
  <!-- Navbar -->
  <nav class="bg-white border-b border-gray-200 p-4">
    <div class="container mx-auto flex justify-between items-center">
      <h1 class="text-2xl font-bold text-black">Mushroom Market</h1>
      <div class="flex items-center space-x-6">
        <a href="#" class="text-gray-700 hover:text-black transition-colors">Home</a>
        <a href="#" class="text-gray-700 hover:text-black transition-colors">Products</a>
        <button id="cart-toggle" class="relative">
          <svg class="w-6 h-6 text-gray-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
          </svg>
          <span id="cart-count" class="absolute -top-2 -right-2 bg-black text-white rounded-full w-5 h-5 flex items-center justify-center text-xs">0</span>
        </button>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <div class="container mx-auto p-8">
    <!-- Product Grid -->
    <div id="product-grid" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
      <!-- Products will be dynamically inserted here -->
    </div>

    <!-- Cart Sidebar -->
    <div id="cart-sidebar" class="fixed top-0 right-0 h-full w-96 bg-white shadow-xl p-8 transform translate-x-full transition-transform duration-300">
      <h2 class="text-2xl font-semibold text-black mb-6">Your Cart</h2>
      <button id="close-cart" class="absolute top-4 right-4 text-gray-600 hover:text-black">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <div id="cart-items" class="space-y-6"></div>
      <div class="mt-8">
        <p class="font-semibold text-black">Total: $<span id="cart-total">0.00</span></p>
        <button id="checkout-btn" class="w-full bg-black text-white py-3 mt-6 rounded-sm hover:bg-gray-800 transition-colors">Proceed to Checkout</button>
      </div>
    </div>

    <!-- Checkout Modal -->
    <div id="checkout-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
      <div class="bg-white p-8 rounded-sm w-full max-w-md">
        <h2 class="text-2xl font-semibold text-black mb-6">Checkout</h2>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Name</label>
          <input id="checkout-name" type="text" class="w-full border border-gray-300 rounded-sm p-3 mb-4 focus:outline-none focus:ring-2 focus:ring-black" required>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Address</label>
          <input id="checkout-address" type="text" class="w-full border border-gray-300 rounded-sm p-3 mb-4 focus:outline-none focus:ring-2 focus:ring-black" required>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Payment Method</label>
          <select id="checkout-payment" class="w-full border border-gray-300 rounded-sm p-3 mb-4 focus:outline-none focus:ring-2 focus:ring-black">
            <option value="credit">Credit Card</option>
            <option value="paypal">PayPal</option>
          </select>
        </div>
        <div class="flex justify-end space-x-4">
          <button id="cancel-checkout" class="px-6 py-3 bg-gray-200 text-gray-700 rounded-sm hover:bg-gray-300 transition-colors">Cancel</button>
          <button id="submit-checkout" class="px-6 py-3 bg-black text-white rounded-sm hover:bg-gray-800 transition-colors">Place Order</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Sample product data
    const products = [
      { id: 1, name: "Bluey Vuitton", price: 60.00, image: "https://via.placeholder.com/150?text=Syringe+with+Bluey+Vuitton+Liquid+Culture" },
      { id: 2, name: "Penis Envy", price: 60.00, image: "https://via.placeholder.com/150?text=Syringe+with+Penis+Envy+Liquid+Culture" },
      { id: 3, name: "Albino Bluey Vuitton", price: 60.00, image: "https://via.placeholder.com/150?text=Syringe+with+Albino+Bluey+Vuitton+Liquid+Culture" },
      { id: 4, name: "Pony Poo Substrate", price: 60.00, image: "https://via.placeholder.com/150?text=Pony+Poo+Substrate" },
    ];

    // Cart state
    let cart = [];

    // DOM elements
    const productGrid = document.getElementById("product-grid");
    const cartSidebar = document.getElementById("cart-sidebar");
    const cartToggle = document.getElementById("cart-toggle");
    const closeCart = document.getElementById("close-cart");
    const cartItems = document.getElementById("cart-items");
    const cartCount = document.getElementById("cart-count");
    const cartTotal = document.getElementById("cart-total");
    const checkoutBtn = document.getElementById("checkout-btn");
    const checkoutModal = document.getElementById("checkout-modal");
    const cancelCheckout = document.getElementById("cancel-checkout");
    const submitCheckout = document.getElementById("submit-checkout");

    // Render products
    function renderProducts() {
      productGrid.innerHTML = products.map(product => `
        <div class="bg-white rounded-sm shadow-sm p-6">
          <img src="${product.image}" alt="${product.name}" class="w-full h-48 object-cover rounded-sm mb-4">
          <h3 class="text-lg font-semibold text-black">${product.name}</h3>
          <p class="text-gray-600">$${product.price.toFixed(2)}</p>
          <button onclick="addToCart(${product.id})" class="w-full bg-black text-white py-3 mt-4 rounded-sm hover:bg-gray-800 transition-colors">Add to Cart</button>
        </div>
      `).join("");
    }

    // Add to cart
    function addToCart(productId) {
      const product = products.find(p => p.id === productId);
      const cartItem = cart.find(item => item.id === productId);
      if (cartItem) {
        cartItem.quantity++;
      } else {
        cart.push({ ...product, quantity: 1 });
      }
      updateCart();
    }

    // Update cart display
    function updateCart() {
      cartItems.innerHTML = cart.map(item => `
        <div class="flex justify-between items-center">
          <div>
            <p class="font-semibold text-black">${item.name}</p>
            <p class="text-gray-600">$${item.price.toFixed(2)} x ${item.quantity}</p>
          </div>
          <button onclick="removeFromCart(${item.id})" class="text-gray-600 hover:text-black">Remove</button>
        </div>
      `).join("");
      cartCount.textContent = cart.reduce((sum, item) => sum + item.quantity, 0);
      cartTotal.textContent = cart.reduce((sum, item) => sum + item.price * item.quantity, 0).toFixed(2);
    }

    // Remove from cart
    function removeFromCart(productId) {
      cart = cart.filter(item => item.id !== productId);
      updateCart();
    }

    // Toggle cart sidebar
    cartToggle.addEventListener("click", () => {
      cartSidebar.classList.toggle("translate-x-full");
    });

    closeCart.addEventListener("click", () => {
      cartSidebar.classList.add("translate-x-full");
    });

    // Checkout process
    checkoutBtn.addEventListener("click", () => {
      if (cart.length === 0) {
        alert("Your cart is empty!");
        return;
      }
      checkoutModal.classList.remove("hidden");
    });

    cancelCheckout.addEventListener("click", () => {
      checkoutModal.classList.add("hidden");
    });

    submitCheckout.addEventListener("click", () => {
      const name = document.getElementById("checkout-name").value;
      const address = document.getElementById("checkout-address").value;
      if (!name || !address) {
        alert("Please fill in all fields.");
        return;
      }
      alert("Order placed successfully!");
      cart = [];
      updateCart();
      checkoutModal.classList.add("hidden");
      cartSidebar.classList.add("translate-x-full");
    });

    // Initialize
    renderProducts();
  </script>
</body>
</html>
